{"version":3,"file":"component---src-templates-page-js-d21d311ee8936ebc71d6.js","mappings":"6JAsCA,IAnCiB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACZC,EAAoBC,KAAKC,KAAKH,EAASI,OAAS,GAChDC,EAAeL,EAASM,MAAM,EAAGL,GACjCM,EAAgBP,EAASM,MAAML,EAAmBD,EAASI,QAEjE,OACE,2BACE,uBAAKI,UAAU,uBAAuB,eAAa,QACjD,2BACGH,EAAaI,KAAI,SAACC,EAASC,GAC1B,OACE,gBAAC,IAAD,CACED,QAASA,EACTE,IAAG,kBAAoBF,EAAQG,KAAKC,WAK5C,2BACE,uBAAKN,UAAU,qCAAqC,mBACjDD,EAAcE,KAAI,SAACC,EAASC,GAC3B,OACE,gBAAC,IAAD,CACED,QAASA,EACTE,IAAG,mBAAqBF,EAAQG,KAAKC,gB,kFCHvD,UAlBoB,SAAC,GAA2B,IAAD,IAAxBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAC3B,EAAqDD,EAAKE,WAAlDC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,SAAUC,EAAnC,EAAmCA,cAC5BC,GAAYC,EAAAA,EAAAA,UAAoC,UAA3BP,MAAAA,GAAA,UAAAA,EAAME,kBAAN,eAAkBH,OAA9C,GACOS,GAAgBD,EAAAA,EAAAA,UAAoC,cAA3BP,MAAAA,GAAA,UAAAA,EAAME,kBAAN,eAAkBH,OAAlD,GACMU,EAAOT,EAAKU,iBAClB,OACE,gBAAC,IAAD,CAAQT,YAAW,iBAAOA,EAAP,CAAoBI,cAAAA,IAAiBM,IAAKP,GAC3D,gBAAC,IAAD,CACEQ,SAAUT,EACVU,SAAUZ,MAAAA,OAAF,EAAEA,EAAaY,SACvB5B,SAAUwB,MAAAA,OAAF,EAAEA,EAAMK,QAEjBR,GAAY,gBAAC,IAAD,CAAmBrB,SAAUwB,MAAAA,OAAF,EAAEA,EAAMK,QAC/CN,GAAgB,gBAAC,UAAD,CAAcO,SAAUd,EAAYe","sources":["webpack://gatsby-starter-default/./src/components/articles.js","webpack://gatsby-starter-default/./src/templates/page.js"],"sourcesContent":["import React from \"react\";\nimport Card from \"./card\";\n\nconst Articles = ({ articles }) => {\n  const leftArticlesCount = Math.ceil(articles.length / 5);\n  const leftArticles = articles.slice(0, leftArticlesCount);\n  const rightArticles = articles.slice(leftArticlesCount, articles.length);\n\n  return (\n    <div>\n      <div className=\"uk-child-width-1-2@s\" data-uk-grid=\"true\">\n        <div>\n          {leftArticles.map((article, i) => {\n            return (\n              <Card\n                article={article}\n                key={`article__left__${article.node.slug}`}\n              />\n            );\n          })}\n        </div>\n        <div>\n          <div className=\"uk-child-width-1-2@m uk-grid-match\" data-uk-grid>\n            {rightArticles.map((article, i) => {\n              return (\n                <Card\n                  article={article}\n                  key={`article__right__${article.node.slug}`}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Articles;\n","import React, { useState } from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"@/components/layout\"\nimport Sections from \"@/components/sections\"\nimport ArticlesComponent from \"../components/articles\"\nimport SneakersPage from \"../templates/sneakersPage\"\nconst DynamicPage = ({ data, pageContext }) => {\n  const { contentSections, metadata, localizations } = data.strapiPage\n  const [blogSlug] = useState(data?.strapiPage?.slug === \"news\")\n  const [sneakersSlug] = useState(data?.strapiPage?.slug === \"sneakers\")\n  const blog = data.allStrapiArticle\n  return (\n    <Layout pageContext={{ ...pageContext, localizations }} seo={metadata}>\n      <Sections\n        sections={contentSections}\n        products={pageContext?.products}\n        articles={blog?.edges}\n      />\n      {blogSlug && <ArticlesComponent articles={blog?.edges} />}\n      {sneakersSlug && <SneakersPage sneakers={pageContext.listSneakers} />}\n    </Layout>\n  )\n}\n\nexport default DynamicPage\n\nexport const query = graphql`\n  fragment GlobalData on StrapiGlobal {\n    favicon {\n      localFile {\n        publicURL\n      }\n    }\n    footer {\n      id\n      columns {\n        id\n        links {\n          id\n          newTab\n          text\n          url\n        }\n        title\n      }\n      id\n      logo {\n        alternativeText\n        localFile {\n          childImageSharp {\n            gatsbyImageData(placeholder: BLURRED, formats: [AUTO, WEBP, AVIF])\n          }\n        }\n      }\n      smallText\n    }\n    id\n    metaTitleSuffix\n    metadata {\n      metaDescription\n      metaTitle\n      shareImage {\n        localFile {\n          publicURL\n        }\n      }\n    }\n    navbar {\n      button {\n        id\n        newTab\n        text\n        type\n        url\n      }\n      id\n      links {\n        url\n        text\n        newTab\n        id\n      }\n      logo {\n        localFile {\n          childImageSharp {\n            gatsbyImageData(placeholder: BLURRED, formats: [AUTO, WEBP, AVIF])\n          }\n        }\n      }\n    }\n    notificationBanner {\n      id\n      text\n      type\n    }\n    banner {\n      Title\n      Subtitle\n      Image {\n        localFile {\n          publicURL\n        }\n      }\n    }\n  }\n  query DynamicPageQuery($id: String!, $locale: String!) {\n    strapiGlobal(locale: { eq: $locale }) {\n      ...GlobalData\n    }\n    strapiPage(id: { eq: $id }) {\n      slug\n      shortName\n      metadata {\n        metaTitle\n        metaDescription\n        shareImage {\n          localFile {\n            publicURL\n          }\n        }\n      }\n      contentSections\n    }\n    allStrapiArticle {\n      edges {\n        node {\n          strapiId\n          slug\n          title\n          published_at\n          category {\n            name\n          }\n          image {\n            localFile {\n              childImageSharp {\n                gatsbyImageData(width: 800, height: 500)\n              }\n            }\n          }\n          author {\n            name\n            picture {\n              localFile {\n                childImageSharp {\n                  gatsbyImageData(width: 30, height: 30)\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["articles","leftArticlesCount","Math","ceil","length","leftArticles","slice","rightArticles","className","map","article","i","key","node","slug","data","pageContext","strapiPage","contentSections","metadata","localizations","blogSlug","useState","sneakersSlug","blog","allStrapiArticle","seo","sections","products","edges","sneakers","listSneakers"],"sourceRoot":""}